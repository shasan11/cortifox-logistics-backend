# Generated by Django 5.1.2 on 2024-12-20 08:23

import core.getCurrentUser
import django.db.models.deletion
import simple_history.models
import uuid
import warehouse.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('master', '0001_initial'),
        ('shipments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalWarehouse',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False, null=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('type', models.CharField(choices=[('self', 'Self'), ('agent', 'Agent')], max_length=10, verbose_name='Type')),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Person')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('note', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_add', models.ForeignKey(blank=True, db_constraint=False, default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical warehouse',
                'verbose_name_plural': 'historical Warehouse Master',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ShipmentItems',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('package_no', models.CharField(max_length=100)),
                ('container_no', models.CharField(default='Fixed', editable=False, max_length=50)),
                ('seal_no', models.CharField(default='Fixed', editable=False, max_length=50)),
                ('loading_point', models.CharField(default='Fixed', editable=False, max_length=50)),
                ('pickup_point', models.CharField(default='Fixed', editable=False, max_length=50)),
                ('is_damaged', models.BooleanField(default=False, editable=False)),
                ('is_missing', models.BooleanField(default=False, editable=False)),
                ('status', models.CharField(default='On Hold', max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipment_items', to='shipments.shipment')),
                ('shipment_package', models.ManyToManyField(to='shipments.shipmentpackages')),
                ('user_add', models.ForeignKey(default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='shipments_item_user_add', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('type', models.CharField(choices=[('self', 'Self'), ('agent', 'Agent')], max_length=10, verbose_name='Type')),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Person')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('note', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('user_add', models.ForeignKey(default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='warehouse_user_add', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Warehouse Master',
            },
        ),
        migrations.CreateModel(
            name='HistoricalWarehouseStorage',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False, null=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('temp', models.FloatField(verbose_name='Temperature')),
                ('max_vol', models.FloatField(verbose_name='Max Volume')),
                ('min_temp', models.FloatField(verbose_name='Min Temperature')),
                ('max_temp', models.FloatField(verbose_name='Max Temperature')),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('package_unit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='master.unitofmeasurementlength', verbose_name='Unit of Mass/Weight')),
                ('user_add', models.ForeignKey(blank=True, db_constraint=False, default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehouse', verbose_name='Warehouse')),
            ],
            options={
                'verbose_name': 'historical warehouse storage',
                'verbose_name_plural': 'historical Warehouse Storage',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ASN',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('asn_no', models.CharField(default=warehouse.models.generate_asn_no, max_length=50, verbose_name='ASN No.')),
                ('boe_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Client Reference No.')),
                ('cleint_ref_no', models.CharField(max_length=50, verbose_name='Client Reference No.')),
                ('from_date', models.DateField(verbose_name='From Date')),
                ('to_date', models.DateField(verbose_name='To Date')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('is_received', models.BooleanField(verbose_name='Is Received')),
                ('is_issued', models.BooleanField(verbose_name='Is Issued')),
                ('is_delivered', models.BooleanField(verbose_name='Is Delivered')),
                ('desc', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('user_add', models.ForeignKey(default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='asn_user_add', to=settings.AUTH_USER_MODEL)),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asns', to='warehouse.shipmentitems', verbose_name='Shipment')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asn_warehouses', to='warehouse.warehouse', verbose_name='Warehouse')),
            ],
            options={
                'verbose_name_plural': 'Advanced Shipping Note',
            },
        ),
        migrations.CreateModel(
            name='WarehouseBin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('client', models.CharField(max_length=255, verbose_name='Client')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('type', models.CharField(max_length=50, verbose_name='Type')),
                ('barcode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Barcode')),
                ('check_digit', models.CharField(blank=True, max_length=1, null=True, verbose_name='Check Digit')),
                ('max_vol', models.FloatField(verbose_name='Max Volume')),
                ('max_gweight', models.FloatField(verbose_name='Max Gross Weight')),
                ('max_nweight', models.FloatField(verbose_name='Max Net Weight')),
                ('max_vweight', models.FloatField(verbose_name='Max Volumetric Weight')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('mass_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pkg_unit_mass_warehouse_bin_location_list', to='master.unitofmeasurement', verbose_name='Unit of Mass/Weight')),
                ('user_add', models.ForeignKey(default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bin_location_list_user_add', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Warehouse Bin',
            },
        ),
        migrations.CreateModel(
            name='StockTransfer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('transfer_no', models.CharField(max_length=50, verbose_name='Transfer No.')),
                ('transfer_date', models.DateField(verbose_name='Transfer Date')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('is_completed', models.BooleanField(verbose_name='Is Completed')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('shipmentitems', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gdos', to='warehouse.shipmentitems', verbose_name='Shipment')),
                ('user_add', models.ForeignKey(default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='stock_transfer_user_add', to=settings.AUTH_USER_MODEL)),
                ('from_warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_transfers_from', to='warehouse.warehouse', verbose_name='From Warehouse')),
                ('to_warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_transfers_to', to='warehouse.warehouse', verbose_name='To Warehouse')),
                ('from_warehouse_bin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_transfers_from_bins', to='warehouse.warehousebin', verbose_name='From Warehouse Bin')),
                ('to_warehouse_bin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_transfers_to_bins', to='warehouse.warehousebin', verbose_name='To Warehouse Bin')),
            ],
            options={
                'verbose_name_plural': 'Stock Transfer',
            },
        ),
        migrations.AddField(
            model_name='shipmentitems',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Warehiouse_shipment_itmes', to='warehouse.warehousebin'),
        ),
        migrations.CreateModel(
            name='HistoricalStockTransfer',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False, null=True)),
                ('transfer_no', models.CharField(max_length=50, verbose_name='Transfer No.')),
                ('transfer_date', models.DateField(verbose_name='Transfer Date')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('is_completed', models.BooleanField(verbose_name='Is Completed')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_add', models.ForeignKey(blank=True, db_constraint=False, default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('shipmentitems', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.shipmentitems', verbose_name='Shipment')),
                ('from_warehouse', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehouse', verbose_name='From Warehouse')),
                ('to_warehouse', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehouse', verbose_name='To Warehouse')),
                ('from_warehouse_bin', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehousebin', verbose_name='From Warehouse Bin')),
                ('to_warehouse_bin', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehousebin', verbose_name='To Warehouse Bin')),
            ],
            options={
                'verbose_name': 'historical stock transfer',
                'verbose_name_plural': 'historical Stock Transfer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalShipmentItems',
            fields=[
                ('id', models.BigIntegerField(blank=True, db_index=True)),
                ('package_no', models.CharField(max_length=100)),
                ('container_no', models.CharField(default='Fixed', editable=False, max_length=50)),
                ('seal_no', models.CharField(default='Fixed', editable=False, max_length=50)),
                ('loading_point', models.CharField(default='Fixed', editable=False, max_length=50)),
                ('pickup_point', models.CharField(default='Fixed', editable=False, max_length=50)),
                ('is_damaged', models.BooleanField(default=False, editable=False)),
                ('is_missing', models.BooleanField(default=False, editable=False)),
                ('status', models.CharField(default='On Hold', max_length=50)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('shipment', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='shipments.shipment')),
                ('user_add', models.ForeignKey(blank=True, db_constraint=False, default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehousebin')),
            ],
            options={
                'verbose_name': 'historical shipment items',
                'verbose_name_plural': 'historical shipment itemss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGoodsRecieptNote',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False, null=True)),
                ('grn', models.CharField(default=warehouse.models.generate_grn_no, max_length=50, verbose_name='GRN No.')),
                ('boe_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Client Reference No.')),
                ('cleint_ref_no', models.CharField(max_length=50, verbose_name='Client Reference No.')),
                ('from_date', models.DateField(verbose_name='From Date')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('desc', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('asn', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.asn', verbose_name='Warehouse')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_add', models.ForeignKey(blank=True, db_constraint=False, default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehouse', verbose_name='Warehouse')),
                ('warehouse_bin', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehousebin', verbose_name='Warehouse Bin')),
            ],
            options={
                'verbose_name': 'historical goods reciept note',
                'verbose_name_plural': 'historical goods reciept notes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGoodsIssueOrder',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False, null=True)),
                ('gio_no', models.CharField(default=warehouse.models.generate_gio_uuid, max_length=50, verbose_name='GDO No.')),
                ('date', models.DateField(verbose_name='From Date')),
                ('client_desc', models.TextField(blank=True, null=True)),
                ('ref_no_no', models.CharField(max_length=50, verbose_name='RefNo')),
                ('client_ref_date', models.DateField(blank=True, null=True, verbose_name='From Date')),
                ('eta', models.DateField(blank=True, null=True, verbose_name='ETA')),
                ('etd', models.DateField(blank=True, null=True, verbose_name='ETD')),
                ('picking_method', models.CharField(default='FIFO', max_length=10)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_add', models.ForeignKey(blank=True, db_constraint=False, default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehouse', verbose_name='Warehouse')),
                ('warehouse_bin', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehousebin', verbose_name='Warehouse Bin')),
            ],
            options={
                'verbose_name': 'historical goods issue order',
                'verbose_name_plural': 'historical goods issue orders',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGoodsDispatchOrder',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False, null=True)),
                ('gdo_no', models.CharField(default=warehouse.models.generate_gdn_uuid, max_length=50, verbose_name='GDO No.')),
                ('date', models.DateField(verbose_name='Dispatch Date')),
                ('client_ref_no', models.CharField(max_length=50, verbose_name='Client Reference No.')),
                ('dispatch_method', models.CharField(default='Truck', max_length=50, verbose_name='Dispatch Method')),
                ('delivery_address', models.TextField(blank=True, null=True, verbose_name='Delivery Address')),
                ('carrier', models.CharField(blank=True, max_length=100, null=True, verbose_name='Carrier')),
                ('eta', models.DateField(blank=True, null=True, verbose_name='Estimated Time of Arrival')),
                ('etd', models.DateField(blank=True, null=True, verbose_name='Estimated Time of Dispatch')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('is_dispatched', models.BooleanField(default=False, verbose_name='Is Dispatched')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_add', models.ForeignKey(blank=True, db_constraint=False, default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('shipment', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.shipmentitems', verbose_name='Shipment Items')),
                ('warehouse', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehouse', verbose_name='Warehouse')),
                ('warehouse_bin', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehousebin', verbose_name='Warehouse Bin')),
            ],
            options={
                'verbose_name': 'historical goods dispatch order',
                'verbose_name_plural': 'historical Goods Dispatch Orders',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalASN',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False, null=True)),
                ('asn_no', models.CharField(default=warehouse.models.generate_asn_no, max_length=50, verbose_name='ASN No.')),
                ('boe_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Client Reference No.')),
                ('cleint_ref_no', models.CharField(max_length=50, verbose_name='Client Reference No.')),
                ('from_date', models.DateField(verbose_name='From Date')),
                ('to_date', models.DateField(verbose_name='To Date')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('is_received', models.BooleanField(verbose_name='Is Received')),
                ('is_issued', models.BooleanField(verbose_name='Is Issued')),
                ('is_delivered', models.BooleanField(verbose_name='Is Delivered')),
                ('desc', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_add', models.ForeignKey(blank=True, db_constraint=False, default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('shipment', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.shipmentitems', verbose_name='Shipment')),
                ('warehouse', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehouse', verbose_name='Warehouse')),
                ('warehouse_bin', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehousebin', verbose_name='Warehouse Bin')),
            ],
            options={
                'verbose_name': 'historical asn',
                'verbose_name_plural': 'historical Advanced Shipping Note',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='GoodsRecieptNote',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('grn', models.CharField(default=warehouse.models.generate_grn_no, max_length=50, verbose_name='GRN No.')),
                ('boe_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Client Reference No.')),
                ('cleint_ref_no', models.CharField(max_length=50, verbose_name='Client Reference No.')),
                ('from_date', models.DateField(verbose_name='From Date')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('desc', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('asn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grn_warehouses_asn', to='warehouse.asn', verbose_name='Warehouse')),
                ('user_add', models.ForeignKey(default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='grn_user_add', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grn_warehouses', to='warehouse.warehouse', verbose_name='Warehouse')),
                ('warehouse_bin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grn_bins', to='warehouse.warehousebin', verbose_name='Warehouse Bin')),
            ],
        ),
        migrations.CreateModel(
            name='GoodsIssueOrder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('gio_no', models.CharField(default=warehouse.models.generate_gio_uuid, max_length=50, verbose_name='GDO No.')),
                ('date', models.DateField(verbose_name='From Date')),
                ('client_desc', models.TextField(blank=True, null=True)),
                ('ref_no_no', models.CharField(max_length=50, verbose_name='RefNo')),
                ('client_ref_date', models.DateField(blank=True, null=True, verbose_name='From Date')),
                ('eta', models.DateField(blank=True, null=True, verbose_name='ETA')),
                ('etd', models.DateField(blank=True, null=True, verbose_name='ETD')),
                ('picking_method', models.CharField(default='FIFO', max_length=10)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('user_add', models.ForeignKey(default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='gio_user_add', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gio_warehouses', to='warehouse.warehouse', verbose_name='Warehouse')),
                ('warehouse_bin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gio_bins', to='warehouse.warehousebin', verbose_name='Warehouse Bin')),
            ],
        ),
        migrations.CreateModel(
            name='GoodsDispatchOrder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('gdo_no', models.CharField(default=warehouse.models.generate_gdn_uuid, max_length=50, verbose_name='GDO No.')),
                ('date', models.DateField(verbose_name='Dispatch Date')),
                ('client_ref_no', models.CharField(max_length=50, verbose_name='Client Reference No.')),
                ('dispatch_method', models.CharField(default='Truck', max_length=50, verbose_name='Dispatch Method')),
                ('delivery_address', models.TextField(blank=True, null=True, verbose_name='Delivery Address')),
                ('carrier', models.CharField(blank=True, max_length=100, null=True, verbose_name='Carrier')),
                ('eta', models.DateField(blank=True, null=True, verbose_name='Estimated Time of Arrival')),
                ('etd', models.DateField(blank=True, null=True, verbose_name='Estimated Time of Dispatch')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('is_dispatched', models.BooleanField(default=False, verbose_name='Is Dispatched')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('user_add', models.ForeignKey(default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='gdo_user_add', to=settings.AUTH_USER_MODEL)),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gdos_shipment_items', to='warehouse.shipmentitems', verbose_name='Shipment Items')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gdo_warehouses', to='warehouse.warehouse', verbose_name='Warehouse')),
                ('warehouse_bin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gdo_bins', to='warehouse.warehousebin', verbose_name='Warehouse Bin')),
            ],
            options={
                'verbose_name_plural': 'Goods Dispatch Orders',
            },
        ),
        migrations.AddField(
            model_name='asn',
            name='warehouse_bin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asn_bins', to='warehouse.warehousebin', verbose_name='Warehouse Bin'),
        ),
        migrations.CreateModel(
            name='WarehouseStorage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('temp', models.FloatField(verbose_name='Temperature')),
                ('max_vol', models.FloatField(verbose_name='Max Volume')),
                ('min_temp', models.FloatField(verbose_name='Min Temperature')),
                ('max_temp', models.FloatField(verbose_name='Max Temperature')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('package_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pkg_unit_mass', to='master.unitofmeasurementlength', verbose_name='Unit of Mass/Weight')),
                ('user_add', models.ForeignKey(default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='warehouse_storage_user_add', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storages', to='warehouse.warehouse', verbose_name='Warehouse')),
            ],
            options={
                'verbose_name_plural': 'Warehouse Storage',
            },
        ),
        migrations.AddField(
            model_name='warehousebin',
            name='warehouse_storage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bins', to='warehouse.warehousestorage', verbose_name='Warehouse Storage'),
        ),
        migrations.CreateModel(
            name='HistoricalWarehouseBin',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False, null=True)),
                ('client', models.CharField(max_length=255, verbose_name='Client')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('type', models.CharField(max_length=50, verbose_name='Type')),
                ('barcode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Barcode')),
                ('check_digit', models.CharField(blank=True, max_length=1, null=True, verbose_name='Check Digit')),
                ('max_vol', models.FloatField(verbose_name='Max Volume')),
                ('max_gweight', models.FloatField(verbose_name='Max Gross Weight')),
                ('max_nweight', models.FloatField(verbose_name='Max Net Weight')),
                ('max_vweight', models.FloatField(verbose_name='Max Volumetric Weight')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('mass_unit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='master.unitofmeasurement', verbose_name='Unit of Mass/Weight')),
                ('user_add', models.ForeignKey(blank=True, db_constraint=False, default=core.getCurrentUser.get_current_user, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('warehouse_storage', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='warehouse.warehousestorage', verbose_name='Warehouse Storage')),
            ],
            options={
                'verbose_name': 'historical warehouse bin',
                'verbose_name_plural': 'historical Warehouse Bin',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
